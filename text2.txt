{ \
		int c = '*'; \
		int n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		buf[n] = '\0'; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		for (int i = 0; i < n; ++i) { \
			if (buf[i] == '!' && buf[i + 1] == '!') { \
				FILE * historyStream = fopen(".csh_history", "r"); \
				if (historyStream == NULL) { \
					YY_FATAL_ERROR("File for history doesn't exists yet!"); \
				} \
				char * line = NULL; \
				int positionInFile = 0; \
				int lineLength = 0; \
				size_t len = 0; \
				ssize_t nread; \
				while ((nread = getline(&line, &len, historyStream)) != -1) { \
					positionInFile = ftell(historyStream); \
					lineLength = nread; \
				} \
				fseek(historyStream, positionInFile - lineLength, SEEK_SET); \
				nread = getline(&line, &len, historyStream); \
				if (nread == -1) { \
					printf("Error in file history! Please write a command before using history navigation!"); \
					n = 1; \
					buf[0] = '\n'; \
					buf[1] = '\0'; \
					break; \
				} \
				memmove(line + nread - 1, line + nread, nread - 1); \
				char * aux = (char *) calloc(max_size, sizeof(char)); \
				strncat(aux, buf, i); \
				strcat(aux, line); \
				strncat(aux, buf + i + 2, n - i - 2); \
				int j; \
				n = strlen(aux); \
				for (j = 0; j <= n; ++j) { \
					buf[j] = aux[j]; \
				} \
				fclose(historyStream); \
			} \
		} \
		printf("%s", buf); \
		char * copyBuf = (char *) malloc(max_size * sizeof(char)); \
		char * bufReconstructed = (char *) calloc(max_size, sizeof(char)); \
		char * lastCommand = (char *) calloc(max_size, sizeof(char)); \
		strcpy(copyBuf, buf); \
		char * token = strtok(copyBuf, " \n\t"); \
		while (token != NULL) { \
			strcat(bufReconstructed, token); \
			strcat(bufReconstructed, " \0"); \
			token = strtok(NULL, " \n\t");					\
		}						\
		bufReconstructed[strlen(bufReconstructed) - 1] = '\0'; \
		FILE * historyStream; \
		historyStream = fopen(".csh_history", "r+"); \
		int historyStreamExist = 1; \
		if (historyStream == NULL) { \
			historyStreamExist = 0;	 \
		}							 \
		else { \
			char * line = NULL; \
			size_t len = 0; \
			while(getline(&line, &len, historyStream) != -1) { \
				memset(lastCommand, 0, sizeof(lastCommand)); \
				strcpy(lastCommand, line); \
			} \
			lastCommand[strlen(lastCommand) - 1] = '\0'; \
		} \
		fclose(historyStream); \
		if (strcmp(lastCommand, bufReconstructed) != 0) { \
			/* Write in file .csh_history the current command */ \
			historyStream = fopen(".csh_history", "a"); \
			if (historyStream == NULL) \
				YY_FATAL_ERROR( "error writing in .csh_history" ); \
			if (strlen(bufReconstructed) > 0) { \
				fprintf(historyStream, "%s\n", bufReconstructed); \
			} \
			fclose(historyStream); \
		} \
		free(bufReconstructed); \
		free(copyBuf); \
		free(lastCommand); \
		result = n; \
		} \